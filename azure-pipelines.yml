trigger:
- master

pool:
  name: 'Default'  # Use the specified self-hosted agent pool

steps:

# Step 1: Check Maven Version
- script: |
    export PATH=$PATH:/opt/apache-maven-3.9.9/bin
    mvn -version
  displayName: 'Check Maven Version'

# Step 2: Run Maven Build
- task: Maven@4  # Updated Maven task version
  inputs:
    mavenPomFile: 'pom.xml'  # Specify the correct path to your pom.xml
    mavenOptions: '-Xmx3072m'  # Optional: memory options for Maven build
    javaHomeOption: 'Custom'  # Set to custom to specify a non-default JDK path
    customJavaHome: '/usr/lib/jvm/java-17-openjdk-amd64'  # Path to your JDK (adjust as necessary)
    mavenVersionOption: 'Custom'  # Custom Maven version (optional)
    customMavenPath: '/opt/apache-maven-3.9.9/bin'  # Path to Maven 3.9.9
    jdkArchitectureOption: 'x64'  # Set architecture as per your Java installation
    jdkUserInputPath: '/usr/lib/jvm/java-17-openjdk-amd64'  # JDK path
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'  # Optional: path to your JUnit test results
    goals: 'package'

- script: |
    echo "Listing files in the source folder:"
    ls -R $(Build.SourcesDirectory)  # List all files and directories recursively in the source folder
  displayName: 'List Files in Source Directory'

# Step 4: Copy Files
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'  # Ensure this points to the source folder where the .war files are
    Contents: '**/*.war'  # Copy all .war files in the source folder and subdirectories
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'warfile'
    publishLocation: 'Container'